{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Parameters": {
    "SlackHook": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "UnencryptedHookURL",
      "Description": "Enter the unencrypted slack webhook url ifyou are not using encryption."
    },
    "SlackChannel": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "SlackChannel",
      "Description": "Enter the slack channel to send a message to. Channel names start with #."
    },
    "SlackUsername": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "SlackUsername",
      "Description": "Enter the slack username to user for messages. An example would be 'Github via [your name]'s AWS Account'"
    },
    "LambdaSlackRole": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "LambdaSlackRole",
      "Description": "Enter the Arn of the Lambda Slack Role."
    },
    "codePipelineBucket": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "codePipelineBucket",
      "Description": "Enter the S3 bucket name that CodePipeline uses to pull the repository code from Github into."
    }
  },
  "Resources": {
    "APIGatewayRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "apigateway.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "CloudWatchLogs",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "logs:*",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "Lambda",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "lambda:*",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "APIGateway",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "apigateway:*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaSlackFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "",
        "Handler": "slack.handler",
        "Role": { "Ref": "LambdaSlackRole" },
        "Code": {
          "S3Bucket": {
            "Ref": "codePipelineBucket"
          },
          "S3Key": {
            "Ref": "codePipelineArtifactName"
          }
        },
        "Environment": {
          "Variables": {
            "SlackHook": {
              "Ref": "SlackHook"
            },
            "SlackChannel": {
              "Ref": "SlackChannel"
            },
            "SlackUsername": {
              "Ref": "SlackUsername"
            }
          }
        },
        "Runtime": "nodejs10.x",
        "MemorySize": "512",
        "Timeout": "60"
      }
    },
    "LambdaSlackPermissionPOST": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "LambdaSlackFunction",
        "APIGatewayRestAPI"
      ],
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [ "LambdaSlackFunction", "Arn" ]
        },
        "Action": "lambda:invokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": { "Fn::Join": [ "", [ "arn:aws:execute-api:", { "Ref": "AWS::Region" }, ":", { "Ref" : "AWS::AccountId" }, ":", { "Ref": "APIGatewayRestAPI" }, "/*/POST/", "github-aws-slack" ] ] }
      }
    },
    "APIGatewayAccount": {
      "DependsOn": [
        "APIGatewayRole"
      ],
      "Type" : "AWS::ApiGateway::Account",
      "Properties" : {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [ "APIGatewayRole", "Arn" ]
        }
      }
    },
    "APIGatewayRestAPI": {
      "DependsOn": [
        "APIGatewayAccount"
      ],
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "EndpointConfiguration": {
          "Types" : [
            "EDGE"
          ]
        },
        "Name": "github-aws-slack"
      }
    },
    "APIGatewayResource": {
      "DependsOn": [ "APIGatewayRestAPI" ],
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "APIGatewayRestAPI"
        },
        "ParentId": {
          "Fn::GetAtt": [ "APIGatewayRestAPI", "RootResourceId" ]
        },
        "PathPart": "github-aws-slack"
      }
    },
    "APIGatewayMethod": {
      "DependsOn": [ "LambdaSlackFunction", "APIGatewayResource" ],
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "APIGatewayResource"
        },
        "RestApiId": {
          "Ref": "APIGatewayRestAPI"
        },
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Join": [
              "",
              [ "arn:aws:apigateway:", { "Ref": "AWS::Region" }, ":lambda:path/2015-03-31/functions/", { "Fn::GetAtt": [ "LambdaSlackFunction", "Arn" ] }, "/invocations" ]
            ]
          },
          "PassthroughBehavior": "WHEN_NO_MATCH"
        },
        "MethodResponses": [
          { "StatusCode": 200 }
        ]
      }
    },
    "APIGatewayDeployment": {
      "DependsOn" : [
        "APIGatewayMethod"
      ],
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "APIGatewayRestAPI"
        },
        "Description": "Live deployment used for slack",
        "StageName": "slack"
      }
    }
  },
  "Outputs": {
    "APIGatewayEndpoint": {
      "Value": {
        "Fn::Join": [ "", [ "https://", { "Ref": "APIGatewayRestAPI" }, ".execute-api.", { "Ref" : "AWS::Region" }, ".amazonaws.com/", "slack/", "github-aws-slack" ] ]
      }
    }
  }
}