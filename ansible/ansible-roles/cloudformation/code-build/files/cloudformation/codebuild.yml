AWSTemplateFormatVersion: 2010-09-09
Description: ''
Parameters:
  StackName:
    Type: String
    Default: ''
    Description: 'Name of the Code Pipeline stack'
  GithubUser:
    Type: String
    Default: ''
    Description: Enter the GitHub User name (also known as Org).
  GithubRepoName:
    Type: String
    Default: ''
    Description: Enter the GitHub Repo name to pull from. Only the Name. not the URL
  GithubRepoURL:
    Type: String
    Default: ''
    Description: >-
      Enter the GitHub Repo URl.
      For example https://github.com/able-solutions/aws-github-slack-webhook
  GithubBranch:
    Type: String
    Default: ''
    Description: Enter the Branch to use from Repo. Only the Name. not the URL
  GithubPersonalAccessTokenSSMParameterName: 
    Type: 'AWS::SSM::Parameter::Value<String>'
    Description: Enter the name of the ssm parameter which holds the required personal access token.
Outputs:
  CodeBuildProject:
    Description: Code Build Project for Stack
    Value: Value to return
    Export:
      Name: !Join 
      - '-'
      - - !Ref 'AWS::StackName'
        - !Ref 'AWS::AccountId'
  ArtifactsBucket:
    Description: S3 bucket used for artifacts
    Export:
      Name: !Join
      - '-'
      - - !Ref 'AWS::StackName'
        - !Ref 'AWS::Region'
        - ArtifactsBucket
    Value: !Ref ArtifactsBucket

Resources:
  ArtifactsBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Join 
      - '-'
      - - !Ref 'AWS::StackName'
        - artifactsbucket
        - !Ref 'AWS::Region'
        - !Ref 'AWS::AccountId'
      VersioningConfiguration:
        Status: Enabled
      Tags:
      - Key: Name
        Value: !Join 
          - '-'
          - - !Ref 'StackName'
            - artifactsbucket
            - !Ref 'AWS::AccountId'
      - Key: Project
        Value: AWS Github to Slack

  CacheBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Description: Creating Amazon S3 bucket for CodeBuild caching
    Properties:
      BucketName: !Join 
      - '-'
      - - !Ref 'AWS::StackName'
        - cachebucket
        - !Ref 'AWS::Region'
        - !Ref 'AWS::AccountId'
      Tags:
        - Key: Name
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - cachebucket
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
        - Key: Project
          Value: AWS Github to Slack
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 30
            Status: Enabled
  

  CodeBuildPolicy:
    Description: Setting IAM policy for service role for CodeBuild
    Properties:
      PolicyDocument:
        Statement:
        - Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Effect: Allow
          Resource: '*'
        - Action:
          - s3:PutObject
          - s3:GetObject
          - s3:GetObjectVersion
          Effect: Allow
          Resource:
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'ArtifactsBucket'
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'ArtifactsBucket'
              - /*
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'CacheBucket'
          - !Join
            - ''
            - - 'arn:aws:s3:::'
              - !Ref 'CacheBucket'
              - /*
        - Action:
          - kms:GenerateDataKey*
          - kms:Encrypt
          - kms:Decrypt
          Effect: Allow
          Resource:
          - !Join
            - ':'
            - - arn:aws:kms
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
              - !Join
                - /
                - - alias
                  - aws/s3
      PolicyName: !Join
        - '-'
        -  - !Ref 'AWS::StackName'
           - CodeBuildPolicy
      Roles:
      - !Ref 'CodeBuildServiceRole'
    Type: AWS::IAM::Policy

  CodeBuildServiceRole:
    Description: Creating service role in IAM for AWS CodeBuild
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      RoleName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - CodeBuild
    Type: AWS::IAM::Role
    
  CodeBuildProject:
      Type: AWS::CodeBuild::Project
      DependsOn:
      - CodeBuildPolicy
      Properties:
        Artifacts:
          Location: !Ref 'ArtifactsBucket'
          Name: 'build-output.zip'
          NamespaceType: BUILD_ID
          Packaging: ZIP
          Path: 'codebuild'
          Type: S3
        Cache:
          Location: !Ref 'CacheBucket'
          Type: S3
        Description: !Join
          - ''
          - - 'CodeBuild Project for '
            - !Ref 'AWS::StackName'
        Environment:
          ComputeType: BUILD_GENERAL1_SMALL
          Image: aws/codebuild/nodejs:8.11.0
          Type: LINUX_CONTAINER
        Name: !Ref 'AWS::StackName'
        ServiceRole: !Ref 'CodeBuildServiceRole'
#        Source:
#          Type: CODECOMMIT
#          Location: !Join
#            - ''
#            - - 'https://git-codecommit.'
#              - !Ref 'AWS::Region'
#              - '.amazonaws.com/v1/repos/'
#              - !Ref 'CodeCommitRepoName'
#          BuildSpec: 'buildspecs/build-with-cache.yml'
        Source:
          Type: GITHUB
 ## used only by the console, this is not valid CloudFormation and it cannot yet configure an OAuth/Personal Access Token for GitHub, but CodePipeline can.
          Auth:
            Type: OAUTH
            Resource: !Ref 'GithubPersonalAccessTokenSSMParameterName'
          #https://github.com/able-solutions/aws-github-slack-webhook
          Location: !Join
            - ''
            - - 'https://github.com/'
              - !Ref 'GithubUser'
              - '/'
              - !Ref 'GithubRepoName'
              - '.git'
          BuildSpec: 'ansible/ansible-roles/cloudformation/build-pipeline/files/buildspecs/lambda-buildspec.yml'
        SourceVersion: !Ref 'GithubBranch'
        Triggers:
          Webhook: true
          FilterGroups:
            - - Type: EVENT
                Pattern: PUSH
        TimeoutInMinutes: 5


